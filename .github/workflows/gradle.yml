name: Docker CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # MySQL 설정 추가
      - name: Set up MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          character set server: 'utf8'
          mysql version: '8.0.33'
          mysql database: 'book_rental'
          mysql root password: ${{ secrets.RootPassword }}
          mysql user: 'book'
          mysql password: ${{ secrets.DatabasePassword }}

      - name: Change gradlew permissions
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

        # Build
      - name: Build with Gradle Wrapper
        run: ./gradlew clean build --exclude-task test

      # DockerHub Login
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Docker 이미지 Build
      - name: docker image build
        run: docker build -t beomsu1221/bookbook2-server .

      # Docker Hub push
      - name: docker Hub push
        run: docker push beomsu1221/bookbook2-server

      # GET Github IP
      - name: get Github IP
        id: ip
        uses: haythem/public-ip@v1.2

      # Configure AWS Credentials - AWS 접근 권한 취득(IAM)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Add Github ip to AWS
      - name: Add GitHub IP to AWS
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32   

      # Set up SSH Key
      - name: Set up SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # AWS EC2 Server Connect & Docker 명령어 실행
      - name: AWS EC2 Connection
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          script: |
            sudo docker stop bookbook2-server
            sudo docker rm bookbook2-server
            sudo docker run -it -d -p 8080:8080 --name bookbook2-server \
            -e SPRING_DATASOURCE_URL="jdbc:mysql://192.168.0.28:3306/book_rental" \
            -e SPRING_DATASOURCE_USERNAME="book" \
            -e SPRING_DATASOURCE_PASSWORD="book" \
            beomsu1221/bookbook2-server

      # REMOVE Github IP FROM security group
      - name: Remove IP FROM security group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32